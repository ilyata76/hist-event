// с этим proto-файлом связаны сервисы:
//    file-api
//    control-api (как клиент)

syntax = "proto3";

package file_api;

// сервис по управлению файлами:
//   получать, отдавать, сохранять и пр. 
service FileAPI {
  // проверить работоспособность
  rpc Ping (PingR) returns (PongR) {}
  // загрузить файл
  rpc AddFile (FileBinaryR) returns (FileR) {}
  // получить файл
  rpc GetFile (FileBaseR) returns (FileBinaryR) {}
  // получить мета-информацию о файле (сгодится для проверки существования файла)
  rpc GetFileMetaInfo (FileBaseR) returns (FileR) {}
  // удалить файл
  rpc DeleteFile (FileBaseR) returns (FileR) {}
  // сохранить/заменить файл
  rpc PutFile (FileBinaryR) returns (FileR) {}
  // получить список мета-информацю всех (или отрезком) файлов
  rpc GetManyFilesMetaInfo (StorageSegmentR) returns (FileSegmentR) {}
};

message PingR {
  //
};
message PongR {
  string pong = 1;
};

// методы работы с файлами

message FileBinaryR {
  FileBinary file = 1;
};
message FileR {
  File file = 1;
};
message FileBaseR {
  FileBase file = 1;
};

//

message StorageSegmentR {
  string storage = 1;
  uint32 start = 2; // например, 1
  uint32 end = 3;   //        -> 10
};
message FileSegmentR {
  repeated File files = 1;
};


// классы

message FileBase {
  string storage = 1;
  string path = 2;
};
message File {
  string storage = 1;
  string path = 2;
  string filename = 3;
};
message FileBinary {
  string storage = 1;
  string path = 2;
  string filename = 3;
  bytes file = 4;
};