// с этим proto-файлом связаны сервисы:
//    file-api (как клиент)
//    control-api (как клиент)
//    nosql-database-api

syntax = "proto3";

package nosql_database_api;

// сервис работы NoSQL базы данных, используемой различными сервисами, например,
//   для запоминания сохранённых файлов на FTP-сервере
service NoSQLDatabaseAPI {
  // проверить работоспособность
  rpc Ping (PingR) returns (PongR) {}
  // сохранить мета-информацию о файле в базе
  rpc AddFileMetaInfo (FileR) returns (FileR) {}
  // сохранить/заменить (запомнить) мета-информацию о файле в базе
  rpc PutFileMetaInfo (FileR) returns (FileR) {}
  // удалить (забыть) мета-информацию о файле в базе
  rpc DeleteFileMetaInfo (FileBaseR) returns (FileR) {}
  // получить мета-информацию файла
  rpc GetFileMetaInfo (FileBaseR) returns (FileR) {}
  // получить список мета-информацю всех (или отрезком) файлов
  rpc GetManyFilesMetaInfo (StorageSegmentR) returns (FileSegmentR) {}
  //
  rpc GetFilesMetaInfoCount (StorageR) returns (CountR) {}
  // 
  rpc PutSQLGeneratorMeta (IdentifierMetaR) returns (IdentifierMetaR) {}
  //
  rpc GetSQLGeneratorMeta (IdentifierR) returns (IdentifierMetaR) {}
  //
  rpc PutSQLGeneratorFiles (ManyFilesIdentifierR) returns (IdentifierR) {}
  //
  rpc GetSQLGeneratorFiles (IdentifierR) returns (ManyFilesIdentifierR) {}
  // 
  rpc PutSQLGeneratorSQLFile (FileBaseIdentifierR) returns (FileBaseIdentifierR) {}
  // 
  rpc GetSQLGeneratorSQLFile (IdentifierR) returns (FileBaseIdentifierR) {}
  //
  rpc GetSQLGeneratorSQLIDs (NothingR) returns (ManyIdentifierMetaR) {}
}

message PingR {
  //
};
message PongR {
  string pong = 1;
};

// методы работы с файлами

message FileR {
  File file = 1;
};
message FileBaseR {
  FileBase file = 1;
};

//

message StorageSegmentR {
  string storage = 1;
  uint32 start = 2; // например, 1
  uint32 end = 3;   //        -> 10
};
message FileSegmentR {
  repeated File files = 1;
};

message IdentifierR {
  string identifier = 1;
}

message IdentifierMetaR {
  string identifier = 1;
  string status = 2;
  string name = 3;
}

message ManyFilesIdentifierR {
  repeated FileBaseKeyword files = 1;
  string identifier = 2;
}

message FileBaseIdentifierR {
  FileBase file = 1;
  string identifier = 2;
}

message CountR {
  uint32 count = 1;
}

message StorageR {
  string storage = 1;
}

message NothingR {}

message ManyIdentifierMetaR {
  repeated IdentifierMetaR metas = 1;
}

// классы

message FileBase {
  string storage = 1;
  string path = 2;
};
message File {
  string storage = 1;
  string path = 2;
  string filename = 3;
};

message FileBaseKeyword {
  string storage = 1;
  string path = 2;
  // dates, others и пр. сущностные категории
  string keyword = 4;
};

//