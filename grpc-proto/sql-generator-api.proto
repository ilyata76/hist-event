// с этим proto-файлом связаны сервисы:
//    file-api (+ как клиент)
//    control-api (как клиент)

syntax = "proto3";

package sql_generator_api;

// долгий синхронный процесс (последовательный обход сущностей),
//      выделенный в отдельный сервис
service SQLGeneratorAPI {
  // проверить работоспособность
  rpc Ping (PingR) returns (PongR) {}
  //
  rpc Validate (ManyFilesNameR) returns (IdentifierMetaR) {}
  //
  rpc ParseAndGenerate (IdentifierR) returns (IdentifierMetaR) {}
  //
  rpc GetSQLGeneratorMeta (IdentifierR) returns (IdentifierMetaR) {}
  //
  rpc GetSQLGeneratorFiles (IdentifierR) returns (ManyFilesIdentifierR) {}
  // 
  rpc GetSQLGeneratorSQLFile (IdentifierR) returns (FileBaseIdentifierR) {}
  //
  rpc GetSQLGeneratorSQLIDs (NothingR) returns (ManyIdentifierMetaR) {}
}

message PingR {
  //
};
message PongR {
  string pong = 1;
};

//

message ManyFilesNameR {
  // набор файлов
  repeated FileBaseKeyword files = 1;
  string name = 2;
}

message ManyFilesIdentifierR {
  // набор файлов
  repeated FileBaseKeyword files = 1;
  // строка идентификации операции для разграничения и сохранения порядка
  string identifier = 2;
}

message IdentifierR {
  string identifier = 1;
}

message IdentifierMetaR {
  string identifier = 1;
  string status = 2;
  string name = 3;
}

message FileBaseIdentifierR {
  FileBase file = 1;
  string identifier = 2;
}

message NothingR {}

message ManyIdentifierMetaR {
  repeated IdentifierMetaR metas = 1;
}

// классы

message FileBase {
  string storage = 1;
  string path = 2;
};
message FileBaseKeyword {
  string storage = 1;
  string path = 2;
  // dates, others и пр. сущностные категории
  string keyword = 4;
};